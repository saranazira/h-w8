# Линейные алгоритмы

# Перевести граммы в килограммы и вывести результат на экран. 
# Значение граммов ввести с клавиатуры.

# gramm = input('Введите граммы:')
# gramm = float(gramm)
# kg = gramm * 0.001

# print(f'{gramm} грамм = {kg} кг')

# Даны две переменные x = 10 и y = 55. Поменяйте их значения местами. 
# Выведите значения переменных на экран до и после замены.

# x = 10
# y = 55
# print(f'До замены чисел: {x,y}')
# x,y = y,x
# print(f'После замены чисел: {x,y}')



# С клавиатуры вводится расстояние L в метрах. 
# Необходимо найти и вывести на экран количество полных километров в нем.
# С клавиатуры вводится целое число. 

# m = input('Введите расстояние:')
# m = float(m)
# km = m * 0.001

# print(f'{m} м = {km} км')


# Необходимо вывести число, обратное введенному по порядку составляющих его цифр.
# Например, если было введено число 12345, программа должна вывести пользователю 
# на экран число 54321.

# n1 = ('12345')
# n2 = n1[::-1]
# print('"Обратное" ему число:', n2)

# Получите и преобразуйте текущую системную дату, 
# возвращаемую методом date.today() модуля стандартной библиотеки datetime, 
# из формата «год-месяц-день» в формат «день.месяц.год». Выведите оба формата даты на экран.

# from datetime import date

# today = date.today()
# print(today)

# print("{}-{}-{}".format(today.day, today.month, today.year)) 


# Логические выражения

# Записать и вывести на экран условие, которое является истинным, 
# когда хотя бы одно из чисел x, y и z больше 80.

# x = int(input('Enter first number: '))
# y = int(input('Enter second number: '))
# z = int(input('Enter third number: '))
# for i in [x, y, z]:
#   if i > 80:
#       print(i)



# Записать и вывести на экран условие, которое является истинным, 
# когда оба числа a и b одновременно положительны или отрицательны.
# a = int(input('Enter first number: '))
# b = int(input('Enter second number:'))


# if a >=  0 and b >= 0:
#     print(a,b)
# elif a < 0 and b < 0:
#     print(a,b)


# Даны три числа: 130, 25 и 70.
# Выведите на экран наименьшее из них, использовав для этого программную проверку.

# x = 130
# y = 25
# z = 70

# if z < x and z < y:
#     print(z)
# elif x < y and x < z:
#     print(x)
# else:
#     print(y)


# Циклы

# Посчитайте количество символов в строке 'Python - это Питон!',
# использовав счетчики на основе циклов for и while.
# s = 'Python - это Питон!'
# res = [len(list(filter(f,s))) for f in (str.isalpha,(lambda x: not x.isalnum()))]
# print(*res, sep=' ')

# Найдите сумму всех элементов списка [1, '2', 3, 4, '5'], 
# предварительно приводя строки к целым числам.

# number_list = [1, '2',3,4,'5']
# number_list = [int(i) for i in number_list]

# print(sum(number_list))

# Используя циклы, проверьте при помощи оператора in наличие символов строки 'abcde123'
#  в строке 'bad_cat_23', 
# выводя результаты проверки на экран в виде «Символ "a" есть в "bad_cat_23".» 
# или «Символа "n" нет в "bad_cat_23".».


# Cгенерируйте и выведите на экран мозаичное изображение гексагональной сетки, 
# напоминающее мелкоячеистую проволочную сетку.

# X_REPEAT = 13 # Количество ячеек по горизонтали.
# Y_REPEAT = 29 # Количество ячеек по вертикали.

# for y in range(Y_REPEAT):
# # Выводим верхнюю половину шестиугольника:
#     for x in range(X_REPEAT):
#      print(r'/ \_', end='')
# print()

# # Выводим нижнюю половину шестиугольника:
# for x in range(X_REPEAT):
#     print(r'\_/ ', end='')
# print()

# Выведите на экран таблицу умножения чисел от одного до девяти.


# numbers = [i for i in range(1, 10)]

# print('----+---------------------------------------------------------------------------')
# print('| x | ', end='\t')

# for n in numbers:
#     print(f'  {n}  ', end='\t')
# print('|')
# print('----+---------------------------------------------------------------------------')

# for i in numbers:
#     print(f'| {i} |', end='\t')
#     for j in numbers:
#         print(f'  {i * j:0>2d}  ', end='\t')
#     print('')

# print('----+---------------------------------------------------------------------------')


# Функции 

# Напишите функцию, которая будет генерировать случайный пароль. 
# В пароле должно быть от 8 до 15 символов Юникода из диапазонов 48-57 (цифры),
# 65-90 (буквы латинского алфавита в верхнем регистре)
# и 97-122 (буквы латинского алфавита в нижнем регистре). 
# Сгенерируйте и выведите на экран три пароля.

# import secrets
 
# symbols = 'ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnpqrstuvwxyz23456789'
# a = int(input("Сколько символов в паролей? "))
# b = int(input("Сколько паролей? "))

# count = 0
# passlist = []
# while count < b:
#     while True:
#         password = ''.join(secrets.choice(symbols) for i in range(a))
 
#         if (any(c.islower() for c in password) and any(c.isupper() for c in password)
#                 and any(c.isdigit() for c in password)):
#             break
        
#     count += 1
#     passlist.append(password)
# print(passlist)





